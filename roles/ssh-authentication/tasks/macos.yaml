---
- name: Ensure ~/.ssh directory exists for each user
  become: true
  become_user: "{{ user.name }}"
  loop: "{{ users }}"
  loop_control:
    loop_var: user
    label: "{{ user.name }}"
  ansible.builtin.file:
    path: "~/.ssh"
    state: directory
    mode: "0700"
    owner: "{{ user.name }}"

- name: Authorize public keys
  loop: "{{ q('subelements', users, 'authorized_keys', {'skip_missing': True}) }}"
  loop_control:
    loop_var: pair
    label: "{{ pair[0].name }} → {{ pair[1] }}"
  vars:
    user: "{{ pair[0] }}"
    public_key: "{{ pair[1] | default(omit) }}"
  ansible.posix.authorized_key:
    user: "{{ user.name }}"
    key: "{{ lookup('file', public_key) }}"
    state: present

- name: Copy private keys
  become: true
  become_user: "{{ user.name }}"
  loop: "{{ q('subelements', users, 'copy_keys', {'skip_missing': True}) }}"
  loop_control:
    loop_var: pair
    label: "{{ pair[0].name }} → {{ pair[1] }}"
  vars:
    user: "{{ pair[0] }}"
    private_key: "{{ pair[1] | default(omit) }}"
  ansible.builtin.copy:
    src: "{{ private_key }}"
    dest: "~/.ssh"
    mode: "0600"
    owner: "{{ user.name }}"

- name: Copy config file
  become: true
  become_user: "{{ user.name }}"
  loop: "{{ users }}"
  loop_control:
    loop_var: user
  when: user.ssh_config is defined
  ansible.builtin.copy:
    src: "{{ user.ssh_config }}"
    dest: "~/.ssh/config"
    mode: "0600"
    owner: "{{ user.name }}"
