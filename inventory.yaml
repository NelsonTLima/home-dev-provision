# vi: ft=yaml.ansible
---
all:
  vars:
    # These vars are the default for all hosts, but it's possible to
    # create another group of hosts and define the these vars also
    # define custom vars to individual hosts.

    ignore_unreachable: true
    ansible_connection: ssh

    ALL_ROLES:
      - 01-system-setup
      - 02-users-groups
      - 03-console-terminal
      - 04-terminal-emulator
      - 05-vim-setup
      - 06-vim-plugins
      - 07-neovim-setup
      - 08-nfs-setup
      - 09-ssh-authentication
      - 10-hardening
      - 11-link-dotfiles

    users:
    # List of users containing variables specific to them.
    # Proggram configurations will perform the same for them.
    # User 0:
      - name: root
    # User 1:
      - name: "{{ ansible_user_id }}"
      # home (string): custom user home path.
      # generate_ssh_key (bool): Generates a ssh key to the user.
      # groups (list):  list of groups that the user participates.
      #                 to permit users to access ssh and nfs you
      #                 need to put ssh-user and nfs-user in this list.
      # append (bool): if true append groups without removing other the groups.
      # copy_keys (list): ssh key paths to copy to user's .ssh directory.
      # authorized_keys (list): paths to public keys to authorize.
      # ssh_config (string): path to ssh config file to copy to .ssh dir.

    chosen_roles: "{{ ALL_ROLES }}" # All roles will be executed by default.
                                    # Users can configure hosts and groups
                                    # as they please.

    packages: full # you can choose minimal or a full set of packages.

    timezone: "America/Recife" # Sets a timezone to the provided machine

    # NFS exports are undefined by default. The user just need to declare
    # a list of dictionaires called `nfs_exports`. It should have the
    # filesystems to export and the  network that can access them.
    #
    # Example:
    #
    # nfs_exports:
    #   - { from: "/srv/nfs", to: "192.168.57.0/24" }


    # NFS imports aren't set by default. Just like the exports, the user need to
    # declare a list of dictionaires containing the filesystems to import and
    # the mounting points.
    #
    # Example:
    #
    # nfs_imports:
    #   - { from: "192.168.57.2:/srv/nfs", to: "/media/remote-nfs" }

  hosts:
    home-lenovo:
      ansible_connection: local
      ansible_host: "127.0.0.1"
      ansible_user: nelson

      chosen_roles:
        - 01-system-setup
        - 02-users-groups
        - 03-console-terminal
        - 04-terminal-emulator
        - 05-vim-setup
        - 06-vim-plugins
        - 07-neovim-setup
        - 08-nfs-setup
        - 09-ssh-authentication
        - 10-hardening
        - 11-link-dotfiles

      packages: full

      nfs_exports:
        - { from: "/srv/nfs", to: "192.168.15.0/24" }
        - { from: "/srv/nfs", to: "127.0.0.1" }

      nfs_imports:
        - { from: "localhost:/srv/nfs", to: "/media/remote-nfs" }

      users:
        - name: root
          home: /root
          generate_ssh_key: false

        - name: nelson
          home: /home/nelson
          generate_ssh_key: false
          groups: [ssh-user, nfs-user]
