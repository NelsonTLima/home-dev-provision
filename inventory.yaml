# vi: ft=yaml.ansible
---
all:
  vars:
    # These are the group vars for all hosts, but it's possible to
    # create other group of hosts and define the same vars to
    # individual hosts.
    ALL_ROLES:
      - system-setup
      - users-groups
      - console-terminal
      - terminal-emulator
      - vim-setup
      - vim-plugins
      - neovim-setup
      - nfs-setup
      - ssh-authentication
      - hardening

    users:
    # List of users containing variables specific to them.
    # Proggram configurations will perform the same for them.
    # User 0:
      - name: root
    # User 1:
      - name: "{{ ansible_user_id }}"
    # Other user variables:

    # home -> string: custom user home path.
    # generate_ssh_key -> bool : Generates a ssh key to the user.
    # groups -> list : list of groups that the user participates.
    #                  to permit this user to access ssh and nfs
    #                  you need to put them in ssh-user and nfs-user.
    # append -> bool: if true append groups without removing other the groups.
    #                 If false, append these groups and remove others.
    # copy_keys -> list: ssh id paths to copy to user's .ssh directory.
    # authorized_keys -> list: public keys to authorize.
    # ssh_config -> string: path to ssh config file to copy to .ssh dir.

    chosen_roles: "{{ ALL_ROLES }}" # All roles will be executed by default.
                                    # Users can configure hosts and groups
                                    # as they please.

    packages: full # you can choose minimal or a full set of packages.

    timezone: "America/Recife" # Sets a timezone to the provided machine

    # NFS exports are undefined by default. But the user just need to declare
    # a list of dictionaires called `nfs_exports`. It should have the
    # filesystems to export and the  network that can access them.
    #
    # Example:
    #
    # nfs_exports:
    #   - { from: "/srv/nfs", to: "192.168.57.0/24" }


    # NFS imports aren't set by default. Just like the exports, the user need to
    # declare a list of dictionaires containing the filesystems to import and
    # the mounting points.
    #
    # Example:
    #
    # nfs_imports:
    #   - { from: "192.168.57.2:/srv/nfs", to: "/media/remote-nfs" }

  hosts:
    test-debian:
      ansible_host: "192.168.57.2"
      ignore_unreachable: true
      ansible_user: vagrant
      ansible_ssh_private_key_file: ~/.ssh/id_vagrant_ed25519

      chosen_roles:
        - debug-role
        - users-groups
        - system-setup
        - console-terminal
        - terminal-emulator
        - vim-setup
        - vim-plugins
        - neovim-setup
        - nfs-setup
        - ssh-authentication
        - hardening

      packages: full

      extra_packages:
        - blueman
        - bluez

      nfs_exports:
        - { from: "/srv/nfs", to: "192.168.57.0/24" }
        - { from: "/srv/nfs", to: "127.0.0.1" }

      nfs_imports:
        - { from: "localhost:/srv/nfs", to: "/media/remote-nfs" }

      users:
        - name: root
          groups: [nfs-user]
          append: true
          generate_ssh_key: false

        - name: "{{ ansible_user_id }}"
          home: "{{ ansible_env.HOME }}"
          groups: [ssh-user, nfs-user]
          generate_ssh_key: true
          copy_ssh_keys: [~/.ssh/id_vagrant_ed25519]
          authorized_keys: [~/.ssh/id_vagrant_ed25519.pub]
          ssh_config: ~/.ssh/config

        - name: nelson
          home: /home/nelson
          generate_ssh_key: true
          groups: [sudo, ssh-user, nfs-user]
          append: true
          copy_keys: [~/.ssh/id_vagrant_ed25519]
          authorized_keys: [~/.ssh/id_vagrant_ed25519.pub]
          ssh_config: ~/.ssh/config


    test-macos:
    # The user should manualy install homebrew .pkg
    # and xcode Command Line Tools
    #
    # MacOs is mostly designed for personal usage, making harder
    # to add and administrate numerous users.
      ansible_host: "192.168.15.224"
      ansible_user: nelson
      ansible_become_password: nelson
      ansible_ssh_private_key_file: ~/.ssh/id_vagrant_ed25519

      timezone: "America/Recife"

      chosen_roles:
        - debug-role
        - users-groups
        - system-setup
        - console-terminal
        - terminal-emulator
        - vim-setup
        - vim-plugins
        - neovim-setup
        - nfs-setup
        - ssh-authentication
        - hardening

      nfs_imports:
        - { from: "192.168.15.3:/srv/nfs", to: "/Users/Shared/remote-nfs" }

      nfs_exports:
      # Macos Exports diferently than Linux NFS server.
      # You should set -network and -mask.
        - { from: "/Users/Shared/nfs", to: "-network 192.168.15.0 -mask 255.255.255.0" }

      users:
        - name: nelson
          groups: [nfs-user, ssh-user]
          append: true
          copy_keys: [~/.ssh/id_vagrant_ed25519]
          authorized_keys: [~/.ssh/id_vagrant_ed25519.pub]
          ssh_config: ~/.ssh/config

        - name: vm-mac
          groups: [nfs-user, ssh-user]
          append: true
          copy_keys: [~/.ssh/id_vagrant_ed25519]
          authorized_keys: [~/.ssh/id_vagrant_ed25519.pub]
          ssh_config: ~/.ssh/config
